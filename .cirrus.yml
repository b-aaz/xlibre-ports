env:
  CIRRUS_CLONE_DEPTH: 1
  BATCH: 1
  CCACHE_DIR: "/tmp/.ccache"
  CCACHE_COMPRESS: 1
  CCACHE_SIZE: "200M"
  CCACHE_STATIC_PREFIX: "/usr/local"
  CCACHE_NOSTATS: 1
  CCACHE_TEMPDIR: "/tmp"
  WITH_CCACHE_BUILD: "YES"
  PORTS_BRANCH: "2025Q2"

common: &COMMON
    freebsd_instance:
      cpu: 4
      memory: 8G
      image: freebsd-14-2-release-amd64-ufs

    portstree_cache:
      folder: /usr/ports/
    ccache_cache:
      folder: ${CCACHE_DIR}
    pkg_cache:
      folder: /var/cache/pkg/
    timeout_in: 90m

    prerequisites_script:
      - ASSUME_ALWAYS_YES=yes pkg bootstrap -f
      - pkg install -y git-lite

    portstree_setup_script:
      - if [ ! -f "/usr/ports/${PORTS_BRANCH}" ] ; then mkdir -p /usr/ports && fetch "https://github.com/freebsd/freebsd-ports/archive/refs/heads/${PORTS_BRANCH}.tar.gz" -o - | tar xf - -C /usr/ports --strip-components=1 && touch "/usr/ports/${PORTS_BRANCH}" ; fi

    ccache_setup_script:
      - env IGNORE_OSVERSION=yes pkg install -y ccache-static
      - ccache --max-size=${CCACHE_SIZE}
      - echo "WITH_CCACHE_BUILD=yes" >> /etc/make.conf
      
    patch_setup_script:
      - |
       {
       {
       patch -N /usr/ports/Mk/bsd.port.subdir.mk << EOF
       @@ -173,6 +173,11 @@
        TARGETS+=	realinstall
        TARGETS+=	reinstall
        TARGETS+=	tags
       +TARGETS+=	stage
       +TARGETS+=	stage-qa
       +TARGETS+=	check-plist
       +TARGETS+=	run-depends-list
       +TARGETS+=	build-depends-list
       
        .for __target in ${TARGETS}
        .  if !target(${__target})
       EOF
       } || true
       }
       grep -n '^TARGETS+=' /usr/ports/Mk/bsd.port.subdir.mk

    makeconf_setup_script:
      - echo 'OVERLAYS=/'"$(pwd)"'/' >> /etc/make.conf
      - echo 'WITH_DEBUG=yes' >> /etc/make.conf
      - echo 'DEBUG_FLAGS+= -O0' >> /etc/make.conf
      - cat /etc/make.conf

    install-run-deps_setup_script:
      - |
       make run-depends-list | sort | uniq | grep -v '^==\|xlibre' | cut -d '/' -f 4- | xargs pkg install -y

    install-build-deps_setup_script:
      - |
       make build-depends-list | sort | uniq | grep -v '^==\|xlibre\|xorg-macros' | cut -d '/' -f 4- | xargs pkg install -y


master_task:
    only_if: $CIRRUS_BRANCH != "x11set"
    alias: pkgs
    <<: *COMMON
     
    stage_script:
      - |
       make stage

    stage-qa_script:
      - |
       make stage-qa

    check-plist_script:
      - |
       make check-plist

    package_script:
      - |
       export PACKAGES="$(pwd)/pkgs/"
       mkdir $PACKAGES
       make package

    build_postsetup_script:
      - |
       export PACKAGES="$(pwd)/pkgs/"
       ABI="$(pkg config abi)"
       mv $PACKAGES/All $PACKAGES/$ABI
       pkg repo -l $PACKAGES/$ABI
       pkg install -y tree
       cd $PACKAGES/$ABI 
       tree -h -D -C -H -./ --houtro=/dev/null -T 'XLibre binaries for FreeBSD' ./ > ./index.html
      
    pkgs_artifacts:
      path: "./pkgs/**/*"
      
x11set_task:
    only_if: $CIRRUS_BRANCH == "x11set"
    alias: sets
    <<: *COMMON
      
    env:
      PREFIXP: '/usr/X11R7'

    makeconf_prefix_script:
      - echo "PREFIX=$PREFIXP" >> /etc/make.conf
      - cat /etc/make.conf
      - env
    
    stage_script:
      - |
       make stage

    stage-qa_script:
      - |
       make stage-qa

    check-plist_script:
      - |
       make check-plist

    package_script:
      - |
       export PACKAGES="$(pwd)/sets/"
       mkdir $PACKAGES
       make package

    build_postsetup_script:
      - |
       export PACKAGES="$(pwd)/sets/"
       ABI="$(pkg config abi)"
       mv $PACKAGES/All $PACKAGES/$ABI
       pkg repo -l $PACKAGES/$ABI
       pkg install -y tree
       cd $PACKAGES/$ABI 
       tree -h -D -C -H -./ --houtro=/dev/null -T 'XLibre sets for FreeBSD' ./ > ./index.html
      
    sets_artifacts:
      path: "./sets/**/*"

